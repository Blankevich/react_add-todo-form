{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","timeId","Math","max","addTodo","newTodo","push","App","useState","setTitle","setUser","errosUser","setErrorUser","errorTitle","setErrorTitle","notTitle","trim","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52c2bd2e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","// export const TodoList = () => {};\n\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nlet timeId = Math.max(...todos.map(todo => todo.id));\n\nconst newTodo = (title: string, userId: number): Todo => ({\n  id: timeId,\n  userId,\n  title,\n  completed: false,\n  user: getUser(userId),\n});\n\nconst addTodo = (title: string, id: number) => {\n  timeId += 1;\n  const todo = newTodo(title, id);\n\n  todos.push(todo);\n};\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [errosUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n\n  const notTitle = title.trim() === '';\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (notTitle) {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (!user) {\n      setErrorUser(true);\n\n      return;\n    }\n\n    addTodo(title, +user);\n    setTitle('');\n    setUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={event => {\n                setTitle(event.target.value);\n                setErrorTitle(false);\n              }}\n            />\n          </label>\n          {errorTitle && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={user}\n              onChange={event => {\n                setUser(event.target.value);\n                setErrorUser(false);\n              }}\n            >\n              <option value=\"\">Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n          {errosUser && (<span>Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}